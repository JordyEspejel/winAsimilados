using DevExpress.XtraEditors;
using DevExpress.XtraSplashScreen;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using E = winAsimilados.Entities;
using C = winAsimilados.Controller;
namespace winAsimilados.Views
{
    public partial class ImportacionEmpleados : Form
    {
        SplashScreenManager splash;
        C.Controller controlador = new C.Controller();
        List<E.Empleado> empleado = new List <E.Empleado>();
        string BDEmpresa = "", IDClte = "", empresaActiva = "";
        string usuario = Properties.Settings.Default.Usuario.ToString().ToUpper();
        bool importa = false;
        public ImportacionEmpleados(SplashScreenManager splashScreenManager, string empresaActual)
        {
            InitializeComponent();
            empresaActiva = empresaActual;
            splash = splashScreenManager;
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource            
            sqlDataSourceBSNOMINAS.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSourceBDEmpresa.Fill();
        }

        private void MigracionEmpleados_Load(object sender, EventArgs e)
        {
            splash.CloseWaitForm();
        }

        private void lookUpEmpr_EditValueChanged(object sender, EventArgs e)
        {
            btnImportar.Enabled = false;
        }

        private void lookUpClte_EditValueChanged(object sender, EventArgs e)
        {
            btnImportar.Enabled = false;
        }

        private void btnImportar_Click(object sender, EventArgs e)
        {
            var resultado = XtraMessageBox.Show("¿Desea importar los empleados del cliente seleccionado a la empresa actual?", "Confirmación", MessageBoxButtons.YesNo, MessageBoxIcon.Question);

            if (resultado.Equals(DialogResult.Yes))
            {
                try
                {
                    if (splash.IsSplashFormVisible.Equals(false))
                    {
                        splash.ShowWaitForm();
                    }

                    for (int i = 0; i < gridViewEmpl.RowCount; i++)
                    {
                        empleado.Add(new E.Empleado
                        {
                            NumEmpl = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[1]).ToString(),
                            Nombre = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[2]).ToString(),
                            RFC = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[3]).ToString(),
                            Correo = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[4]).ToString(),
                            CURP = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[5]).ToString(),
                            TipoRegimen = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[6]).ToString(),
                            Departamento = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[8]).ToString(),
                            cuenta = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[9]).ToString(),
                            clabe_bancaria = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[10]).ToString(),
                            cve_banco = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[11]).ToString(),
                            banco = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[12]).ToString(),
                            Puesto = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[14]).ToString(),
                            TipoContrato = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[15]).ToString(),
                            Periodicidad = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[17]).ToString(),
                            Sindicalizado = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[10]).ToString(),
                            idEmpresa = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[23]).ToString(),
                            empresa = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[24]).ToString(),
                            descuento = Convert.ToDecimal(gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[25]).ToString()),
                            tipoPago = gridViewEmpl.GetRowCellValue(i, gridViewEmpl.Columns[26]).ToString(),
                        });
                    }

                    controlador.ImportaEmpleado(lookUpEmpr.Text, empresaActiva, empleado, usuario, splash);
                    empleado.Clear();
                }
                catch (Exception imp)
                {
                    if (splash.IsSplashFormVisible.Equals(true))
                    {
                        splash.CloseWaitForm();
                    }
                    empleado.Clear();
                    XtraMessageBox.Show("Error btnImportar: " + imp.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        private void btnBuscar_Click(object sender, EventArgs e)
        {
            btnImportar.Enabled = false;
            if (lookUpEmpr.Text.Equals("Seleccione"))
            {
                XtraMessageBox.Show("Por favor, seleccione una empresa.", "Mensaje", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            else
            {
                BDEmpresa = lookUpEmpr.EditValue.ToString();
            }
            if (lookUpClte.Text.Equals("Seleccione"))
            {
                XtraMessageBox.Show("Por favor, seleccione un cliente.", "Mensaje", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            else
            {
                IDClte = lookUpClte.EditValue.ToString();
            }

            if (BDEmpresa != "" && IDClte != "")
            {
                controlador.ListaEmpleadosImportación(gridControlEmpl, BDEmpresa, IDClte);

                if (gridViewEmpl.RowCount.Equals(0))
                {
                    XtraMessageBox.Show("La empresa: " + lookUpEmpr.Text + " No tiene empleados registrados para el cliente: " + lookUpClte.Text + ".\nNo hay información en los criterios seleccionados, por favor realice otra busqueda.", "Buscar empleados", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }
                else
                {
                    btnImportar.Enabled = true;
                }
            }
        }
    }
}
