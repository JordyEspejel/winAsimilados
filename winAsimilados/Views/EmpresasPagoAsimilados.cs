using DevExpress.XtraEditors;
using DevExpress.XtraSplashScreen;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using C = winAsimilados.Controller;
using E = winAsimilados.Entities;

namespace winAsimilados.Views
{
    public partial class EmpresasPagoAsimilados : Form
    {
        C.Controller controlador = new C.Controller();
        E.EmpresaPago empresaPago = new E.EmpresaPago();
        SplashScreenManager splash;
        string ID;
        string newID;
        int numID, IDE;
        string IDEmp, RFC, RS, Estatus;
        string Archivo;
        string NombreArchivo;
        string nominaID;
        string usuarioSistema = Properties.Settings.Default.Usuario.ToString();
        string mensaje;
        string nombreArchivoOriginal;
        public EmpresasPagoAsimilados(SplashScreenManager splashScreenManager)
        {
            splash = splashScreenManager;
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
        }
        private void GetNextID()
        {
            ID = controlador.GetIDEmpresaPago();

            for (int i = 0; i < ID.Length; i++)
            {
                if (Char.IsDigit(ID[i]))
                {
                    newID += ID[i];
                }
            }
            if (newID.Length > 0)
            {
                numID = int.Parse(newID);
            }

            if (numID.ToString().Length.Equals(1))
            {
                numID++;
                newID = "I00" + numID.ToString();
            }else if (numID.ToString().Length.Equals(2))
            {
                numID++;
                newID = "I0" + numID.ToString();
            }
            else if (numID.ToString().Length.Equals(3))
            {
                numID++;
                newID = "I" + numID.ToString();
            }

                //txtID.Text = newID;
                txtID.Text = newID;
            //cliente.ID = newID;
            newID = "";
        }

        public void LlenaTabla()
        {
            controlador.ListaEmpresasPago(gridControlEmpr);
            gridControlEmpr.Visible = true;
        }

        private void EmpresasPagoAsimilados_Load(object sender, EventArgs e)
        {
            this.GetNextID();
            this.LlenaTabla();
            if (splash.IsSplashFormVisible.Equals(true))
            {
                splash.CloseWaitForm();
            }
        }

        private void btnBaja_Click(object sender, EventArgs e)
        {
            for (int i = 0; i < gridViewEmpr.RowCount; i++)
            {
                if (gridViewEmpr.IsRowSelected(i))
                {
                    IDE = Convert.ToInt32(gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[0]).ToString());
                    IDEmp = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[1]).ToString();
                    RFC = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[2]).ToString();
                    RS = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[3]).ToString();
                    Estatus = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[4]).ToString();
                }
            }
            if (Estatus.Equals("A"))
            {
                if (controlador.BajaEmpresaPago(IDE).Equals(true))
                {

                    XtraMessageBox.Show("!La Empresa: " + RS + " fue dada de baja con éxito¡", "Mensaje", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    layoutControlbtnEditar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
                    layoutControlbtnGuardar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnCancelar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnBaja.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnAlta.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    gridColumnRazonSocial.OptionsColumn.AllowEdit = false;
                    gridColumnRFC.OptionsColumn.AllowEdit = false;
                    gridColumnEstatus.OptionsColumn.AllowEdit = false;
                    this.LlenaTabla();
                }
                else
                {
                    XtraMessageBox.Show("!Error al dar de baja la empresa:" + RS + " ¡", "Mensaje", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    layoutControlbtnEditar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
                    layoutControlbtnGuardar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnCancelar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnBaja.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnAlta.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    gridColumnRazonSocial.OptionsColumn.AllowEdit = false;
                    gridColumnRFC.OptionsColumn.AllowEdit = false;
                    gridColumnEstatus.OptionsColumn.AllowEdit = false;
                    this.LlenaTabla();
                }
            }
            else
            {
                XtraMessageBox.Show("!La Empresa: " + RS + " Ya fue dada de baja anteriormente¡", "Mensaje", MessageBoxButtons.OK, MessageBoxIcon.Information);
                layoutControlbtnEditar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
                layoutControlbtnGuardar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                layoutControlbtnCancelar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                layoutControlbtnBaja.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                layoutControlbtnAlta.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                gridColumnRazonSocial.OptionsColumn.AllowEdit = false;
                gridColumnRFC.OptionsColumn.AllowEdit = false;
                gridColumnEstatus.OptionsColumn.AllowEdit = false;
                this.LlenaTabla();
            }
        }

        private void btnAltaEmpr_Click(object sender, EventArgs e)
        {
            for (int i = 0; i < gridViewEmpr.RowCount; i++)
            {
                if (gridViewEmpr.IsRowSelected(i))
                {
                    IDE = Convert.ToInt32(gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[0]).ToString());
                    IDEmp = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[1]).ToString();
                    RFC = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[2]).ToString();
                    RS = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[3]).ToString();
                    Estatus = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[4]).ToString();
                }
            }
            if (Estatus.Equals("I"))
            {
                if (controlador.AltaEmpresaPago(IDE).Equals(true))
                {

                    XtraMessageBox.Show("!La Empresa: " + RS + " fue dada de alta con éxito¡", "Mensaje", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    layoutControlbtnEditar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
                    layoutControlbtnGuardar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnCancelar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnBaja.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnAlta.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    gridColumnRazonSocial.OptionsColumn.AllowEdit = false;
                    gridColumnRFC.OptionsColumn.AllowEdit = false;
                    gridColumnEstatus.OptionsColumn.AllowEdit = false;
                    this.LlenaTabla();
                }
                else
                {
                    XtraMessageBox.Show("!Error al dar de alta la empresa:" + RS + " ¡", "Mensaje", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    layoutControlbtnEditar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
                    layoutControlbtnGuardar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnCancelar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnBaja.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnAlta.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    gridColumnRazonSocial.OptionsColumn.AllowEdit = false;
                    gridColumnRFC.OptionsColumn.AllowEdit = false;
                    gridColumnEstatus.OptionsColumn.AllowEdit = false;
                    this.LlenaTabla();
                }
            }
            else
            {
                XtraMessageBox.Show("!La Empresa: " + RS + " Ya fue dada de alta anteriormente¡", "Mensaje", MessageBoxButtons.OK, MessageBoxIcon.Information);
                layoutControlbtnEditar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
                layoutControlbtnGuardar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                layoutControlbtnCancelar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                layoutControlbtnBaja.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                layoutControlbtnAlta.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                gridColumnRazonSocial.OptionsColumn.AllowEdit = false;
                gridColumnRFC.OptionsColumn.AllowEdit = false;
                gridColumnEstatus.OptionsColumn.AllowEdit = false;
                this.LlenaTabla();
            }
        }

        private void txtLogo_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            xtraOpenFileDialog1.Title = "Selecciona Archivo a Cargar";
            xtraOpenFileDialog1.Filter = "Archivos de imagen (*.jpg, *.jpeg, *.jpe, *.jfif, *.png) | *.jpg; *.jpeg; *.jpe; *.jfif; *.png";
            xtraOpenFileDialog1.FileName = "";
            xtraOpenFileDialog1.FilterIndex = 1;
            xtraOpenFileDialog1.RestoreDirectory = true;

            if (xtraOpenFileDialog1.ShowDialog() == DialogResult.OK)
            {
                Archivo = xtraOpenFileDialog1.FileName;
                nombreArchivoOriginal = xtraOpenFileDialog1.SafeFileName;
                txtLogo.Text = Archivo;
            }
        }

        private void btnEditar_Click(object sender, EventArgs e)
        {
            layoutControlbtnEditar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
            layoutControlbtnGuardar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
            layoutControlbtnCancelar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
            layoutControlbtnBaja.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
            layoutControlbtnAlta.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
            layoutControlBtnActLogo.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
            gridColumnRazonSocial.OptionsColumn.AllowEdit = true;
            gridColumnRFC.OptionsColumn.AllowEdit = true;
            gridColumnEstatus.OptionsColumn.AllowEdit = true;
        }

        private void btnActualizaLogo_Click(object sender, EventArgs e)
        {
            try
            {
                byte[] file = null;
                if (txtLogo.Text.Equals(""))
                {
                    mensaje = "Por favor, cargue un archivo.";
                    XtraMessageBox.Show(mensaje, "Cargar Archivo", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }
                else
                {

                    //Stream stream = openFileDialog1.OpenFile();
                    Stream stream = OpenFile(Archivo);
                    using (MemoryStream memoryStream = new MemoryStream())
                    {
                        stream.CopyTo(memoryStream);
                        file = memoryStream.ToArray();
                    }
                }
                for (int i = 0; i < gridViewEmpr.RowCount; i++)
                {
                    if (gridViewEmpr.IsRowSelected(i))
                    {
                        IDE = Convert.ToInt32(gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[0]).ToString());
                        IDEmp = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[1]).ToString();
                        RFC = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[2]).ToString();
                        RS = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[3]).ToString();
                        Estatus = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[4]).ToString();
                    }
                }
                using (Models.AsimiladosEntitiesLogos lg = new Models.AsimiladosEntitiesLogos())
                {
                    var logo = lg.LogosEmpresas.SingleOrDefault(b => b.logoIDEmpresa == IDEmp);
                    if (logo != null)
                    {
                        string path = AppDomain.CurrentDomain.BaseDirectory;
                        string folder = path + @"Logos\";
                        string fullPath = folder + logo.logoPath;
                        if (File.Exists(fullPath))
                        {
                            File.Delete(fullPath);
                        }
                        logo.logoArchivo = file;
                        lg.SaveChanges();
                    }
                    else
                    {
                        Models.LogosEmpresas logoNuevo = new Models.LogosEmpresas();
                        logoNuevo.logoNombre = nombreArchivoOriginal;
                        string path = AppDomain.CurrentDomain.BaseDirectory;
                        string folder = path + "/Logos/";
                        string fullFilePath = folder + Archivo;
                        logoNuevo.logoPath = nombreArchivoOriginal;
                        logoNuevo.logoArchivo = file;
                        logoNuevo.logoFechaCarga = DateTime.Now;
                        logoNuevo.logousuarioArchivoCarga = usuarioSistema;
                        logoNuevo.logoIDEmpresa = IDEmp;
                        logoNuevo.logoEmpresa = RS;
                        lg.LogosEmpresas.Add(logoNuevo);
                        lg.SaveChanges();
                    }
                }
                mensaje = "¡Logo Actualizado con éxito!";
                XtraMessageBox.Show(mensaje, "Actualizar Logo", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }catch (Exception btnActLogo)
            {
                mensaje = string.Concat("Error al intentar actualizar logo:", "\n", btnActLogo.Message);
                XtraMessageBox.Show(mensaje, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            #region validaciones
            if (txtRazon.Text.Equals(""))
            {
                XtraMessageBox.Show("Por favor, ingrese Razon Social", "Mensaje", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            else
            {
                empresaPago.RazonSocial = txtRazon.Text;
            }

            if (txtRFC.Text.Equals(""))
            {
                XtraMessageBox.Show("Por favor, ingrese RFC", "Mensaje", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            else
            {
                empresaPago.RFC = txtRFC.Text;
            }
            if (txtLogo.Text.Equals(""))
            {
                mensaje = "Por favor, cargue un archivo.";
                XtraMessageBox.Show(mensaje, "Cargar Archivo", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            #endregion
            empresaPago.IDEmpresa = txtID.Text;

            if (controlador.InsertaEmpresaPago(empresaPago).Equals(true))
            {
                NombreArchivo = txtLogo.Text;

                byte[] file = null;
                //Stream stream = openFileDialog1.OpenFile();
                Stream stream = OpenFile(Archivo);
                using (MemoryStream memoryStream = new MemoryStream())
                {
                    stream.CopyTo(memoryStream);
                    file = memoryStream.ToArray();
                }
                using (Models.AsimiladosEntitiesLogos lg = new Models.AsimiladosEntitiesLogos())
                {
                    Models.LogosEmpresas logo = new Models.LogosEmpresas();
                    logo.logoNombre = nombreArchivoOriginal;
                    string path = AppDomain.CurrentDomain.BaseDirectory;
                    string folder = path + "/Logos/";
                    string fullFilePath = folder + Archivo;
                    logo.logoPath = nombreArchivoOriginal;
                    logo.logoArchivo = file;
                    logo.logoFechaCarga = DateTime.Now;
                    logo.logousuarioArchivoCarga = usuarioSistema;
                    logo.logoIDEmpresa = txtID.Text;
                    logo.logoEmpresa = txtRazon.Text;
                    lg.LogosEmpresas.Add(logo);
                    lg.SaveChanges();
                }
                this.LlenaTabla();
                this.GetNextID();
                txtRazon.Text = "";
                txtRFC.Text = "";
            }
            else
            {
                XtraMessageBox.Show("Error al dar de alta Empresa.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnCancelar_Click(object sender, EventArgs e)
        {
            layoutControlbtnEditar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
            layoutControlbtnGuardar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
            layoutControlbtnCancelar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
            layoutControlbtnBaja.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
            layoutControlbtnAlta.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
            layoutControlBtnActLogo.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
            gridColumnRazonSocial.OptionsColumn.AllowEdit = false;
            gridColumnRFC.OptionsColumn.AllowEdit = false;
            gridColumnEstatus.OptionsColumn.AllowEdit = false;
            this.LlenaTabla();
        }

        private void btnGuardar_Click(object sender, EventArgs e)
        {
            var respuesta = XtraMessageBox.Show("¿Desea guardar los cambios realizados?", "Confirmación", MessageBoxButtons.YesNo, MessageBoxIcon.Question);

            if (respuesta.Equals(DialogResult.Yes))
            {
                var listaEmpresa = new List<E.EmpresaPago>();
                for (int i = 0; i < gridViewEmpr.RowCount; i++)
                {
                    IDE = Convert.ToInt32(gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[0]).ToString());
                    IDEmp = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[1]).ToString();
                    RFC = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[2]).ToString();
                    RS = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[3]).ToString();
                    Estatus = gridViewEmpr.GetRowCellValue(i, gridViewEmpr.Columns[4]).ToString();
                    listaEmpresa.Add(new E.EmpresaPago
                    {
                        ID = IDE,
                        IDEmpresa = IDEmp,
                        RFC = RFC,
                        RazonSocial = RS,
                        Estatus = Estatus
                    });
                }

                if (controlador.ModificaEmpresaPago(listaEmpresa).Equals(true))
                {
                    XtraMessageBox.Show("!Información actualizada¡", "Mensaje", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    layoutControlbtnEditar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
                    layoutControlbtnGuardar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnCancelar.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnBaja.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlbtnAlta.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    layoutControlBtnActLogo.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                    gridColumnRazonSocial.OptionsColumn.AllowEdit = false;
                    gridColumnRFC.OptionsColumn.AllowEdit = false;
                    gridColumnEstatus.OptionsColumn.AllowEdit = false;
                    this.LlenaTabla();
                }

            }
        }
        public Stream OpenFile(string fileName)
        {
            FileStream stream = null;
            try
            {
                stream = new FileStream(fileName, FileMode.Open, FileAccess.Read, FileShare.Read);
            }
            finally
            {
                //...  
            }
            return stream;
        }
    }
}
