<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnAgregarEmpresa.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        7wAAAO8B1JFQ0AAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAP/SURBVFhHzZVZ
        SFRhFMeHIiooIoIeCiKoqJglcaC8d1xyqXRsbO5Mt/IhEMuWhwrafevBFpD25U1aHtotKqOghRakzXWm
        zKxpdLRIrUlTHwz165zrvcO91+M0MxX08INvznfO/3++Zb5rYIzFTKI5e6Jtds54ai5SyGAkJJjdGbxJ
        6AKCvFngqJxIIIO/w2YSXGDcCzCZHs7oXkLl/g4yGA7OJOSDYR8aJ6WvrUtKK3gjN/HTZnKuoGrCQQaH
        gze5toHRABomL93sdVT4mOOVD8abvHIT/ZzZtZ6qHQ4ySAHiRbIJS8kt9Dqq/MxR3TgIjFNyd3uUediJ
        QkqDggyqMRj2jICVn1LEUzfs84aMdaSuL1J2ApoQiik9PWRQwWpdNwpu+HlZdCB914k6ylhN2o6jyp1A
        SkRRHElpK5BBhOPEsbzJeVsSMgt9i/afaaAMKTKKSt5BXT/WwqUtzZqZNZryQMig1SpO4I3CE3kVvYtP
        lvopo3AsPnrZB0c3+Fc1CvcXGsVxlNeQAG8RJkNRNRbazK7uJWfvfKIMIiGz5HYzb3b1yAt5MX+OMEnv
        p/mRaBSnQbe4fYy3LA9mXXnUrhfN9zSzQ/Vt7OL7b+ypv1MCxwfrW1kezOnzsy48aOUt7g7UhON4w80T
        p6o9QwPO7J4DSQHJPE78Yi973qkWygGK37aymqYu9rqpm6S6sYsdgBzMVdfab5YHbXFiu6RtEhoXzHXP
        0jSQYHHFw0QbJtisK1uy71X1qAWcwC3fd9KU4vqH72yZqh6x363stsWv+Cw30cobnXFSA3BGyRDolCbi
        VzZkP/T0qguR47DllFE4DkONXge10UNuosNmWZZkgDP3y4HH9uvlbn3RRm8L8xAGSOHO4xLUXC2wztOi
        0ULQA70kT/CGHRC24qu1cHremJxKf6a+4FzDN9Kg4m07Ni2BYyrndMNXjRaCHugF5gc5k3NL6BIiVAMP
        PnaS4i/r2kIN4JjKufexQ6OFoIfaM2wDrpqmIdu/a/sx5kgrYEtT14YawLEjvWDIcWCtABpqzagayK0N
        aAS98DfLTMoLGeuxp+Rr8pFVNYHYG0Ce+X9oBF+8/sJKy16x81eehoxxfK2sQppT55ZDrV4v6gaufghq
        RBUiuQOX3gc1WkjUDeyt065KwQOXE48DwTGVswdq9XpRN4DPatkwryCufLjV34DXUP8kS3rRNoDk1Taz
        KriAlBFFJeSuhgtMacXUAFIArxr+rylDNXd9HWwN8VVUiLkBBD9KR+CNfwRn7lWZ4hhj+JnWf4T0/FED
        apbDA7PZ+0kCx1QOxV9rIFb+7wacFYEZkNSnL/qL9KGH2lPTAJJTFZjiqPQn/AtQW+vHDL8A6chYnuyT
        wvAAAAAASUVORK5CYII=
</value>
  </data>
</root>